{"ast":null,"code":"import _regeneratorRuntime from \"/home/ckent/Documents/Dev/getfried/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ckent/Documents/Dev/getfried/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-fetch';\nvar headers = {\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  \"Access-Control-Allow-Origin\": \"*\"\n};\nexport function getImages(_x) {\n  return _getImages.apply(this, arguments);\n}\n\nfunction _getImages() {\n  _getImages = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(key) {\n    var body, req, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = {\n              key: key\n            };\n            console.log('this is the body: ', body);\n            _context.next = 4;\n            return fetch('http://localhost:5000/get-images', {\n              headers: headers,\n              method: 'POST',\n              body: JSON.stringify(body)\n            }).catch(function (err) {\n              console.log('error: ', err);\n            });\n\n          case 4:\n            req = _context.sent;\n            _context.next = 7;\n            return req.json();\n\n          case 7:\n            res = _context.sent;\n            console.log('this is the res: ', res);\n            return _context.abrupt(\"return\", res);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getImages.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ckent/Documents/Dev/getfried/client/src/api.js"],"names":["fetch","headers","Accept","getImages","key","body","console","log","method","JSON","stringify","catch","err","req","json","res"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,IAAMC,OAAO,GAAG;AACd,kCAAgC,6BADlB;AAEdC,EAAAA,MAAM,EAAE,kBAFM;AAGd,kBAAgB,kBAHF;AAId,iCAAgC;AAJlB,CAAhB;AAOA,gBAAsBC,SAAtB;AAAA;AAAA;;;;;2BAAO,iBAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,IADC,GACM;AAACD,cAAAA,GAAG,EAAEA;AAAN,aADN;AAELE,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC;AAFK;AAAA,mBAGWL,KAAK,CAAC,kCAAD,EAAqC;AACxDC,cAAAA,OAAO,EAAPA,OADwD;AAExDO,cAAAA,MAAM,EAAE,MAFgD;AAGxDH,cAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHkD,aAArC,CAAL,CAKfM,KALe,CAKT,UAAAC,GAAG,EAAI;AACZN,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,GAAvB;AACD,aAPe,CAHX;;AAAA;AAGDC,YAAAA,GAHC;AAAA;AAAA,mBAWWA,GAAG,CAACC,IAAJ,EAXX;;AAAA;AAWDC,YAAAA,GAXC;AAYLT,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,GAAjC;AAZK,6CAaEA,GAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import fetch from 'isomorphic-fetch';\n\nconst headers = {\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  \"Access-Control-Allow-Origin\" : \"*\",\n};\n\nexport async function getImages(key) {\n  let body = {key: key};\n  console.log('this is the body: ', body);\n  let req = await fetch('http://localhost:5000/get-images', {\n    headers,\n    method: 'POST',\n    body: JSON.stringify(body),\n  } )\n  .catch(err => {\n    console.log('error: ', err);\n  });\n  let res = await req.json();\n  console.log('this is the res: ', res);\n  return res;\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar request = require('request'),\n    cheerio = require('cheerio'),\n    Promise = require('bluebird'),\n    RateLimiter = require('limiter').RateLimiter,\n    EventEmitter = require('events'),\n    util = require('util');\n\nfunction Scraper() {\n  EventEmitter.call(this);\n}\n\nutil.inherits(Scraper, EventEmitter);\n/**\n * Get the image src for images, options specify the details.\n */\n\nScraper.prototype.list = function (options) {\n  var self = this;\n  if (!options || !options.keyword) return Promise.reject(new Error('no keyword provided'));\n  this.rlimit = new RateLimiter(options.rlimit || 0, 'second');\n  this.userAgent = options.userAgent || 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36';\n  var base = 'https://images.search.yahoo.com/search/images?fr=yfp-t-404&fr2=piv-web&o=js&p=%&tab=organic&tmpl=&nost=1';\n  var roptions = {\n    'User-Agent': this.userAgent\n  };\n  var result = [];\n\n  var nextPage = function nextPage(n) {\n    return new Promise(function (resolve, reject) {\n      roptions.url = base.replace('%', options.keyword) + '&b=' + n;\n      self.rlimit.removeTokens(1, function () {\n        request(roptions, function (err, response, body) {\n          if (!err && response.statusCode === 200) {\n            var html = JSON.parse(body).html;\n\n            if (!html) {\n              self.emit('end', result);\n              return resolve(result);\n            }\n\n            var $ = cheerio.load(html);\n            $('.ld').each(function () {\n              var meta = JSON.parse($(this).attr('data'));\n\n              try {\n                var item = {\n                  url: meta.iurl,\n                  thumb: meta.ith,\n                  width: meta.w,\n                  height: meta.h,\n                  size: meta.s.match(/[-+]?(\\d*[.])?\\d+/)[0],\n                  format: meta.s.match(/\\D\\D/)[0]\n                };\n                self.emit('result', item);\n                result.push(item);\n              } catch (err) {\n                // warn\n                console.log('warn', err);\n              }\n            });\n\n            if (options.num && result.length > options.num) {\n              var out = result.slice(0, options.num);\n              self.emit('end', out);\n              return resolve(out);\n            } // next page\n\n\n            resolve(nextPage(n + 60));\n          } else {\n            self.emit('end', result);\n            resolve(result);\n          }\n        });\n      });\n    });\n  };\n\n  return nextPage(1);\n};\n\nmodule.exports = Scraper;","map":null,"metadata":{},"sourceType":"script"}
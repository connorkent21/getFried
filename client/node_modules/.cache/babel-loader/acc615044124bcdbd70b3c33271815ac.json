{"ast":null,"code":"// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar _ = require('lodash'),\n    submittableSelector = 'input,select,textarea,keygen',\n    rCRLF = /\\r?\\n/g,\n    rcheckableType = /^(?:checkbox|radio)$/i,\n    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i;\n\nexports.serializeArray = function () {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function () {\n    var elem = this;\n    var $elem = Cheerio(elem);\n\n    if (elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    } else {\n      return $elem.filter(submittableSelector).toArray();\n    }\n  }).filter(function () {\n    var $elem = Cheerio(this);\n    var type = $elem.attr('type'); // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n\n    return $elem.attr('name') && !$elem.is(':disabled') && // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n    !rsubmitterTypes.test(type) && ( // and are either checked/don't have a checkable state\n    $elem.attr('checked') || !rcheckableType.test(type)); // Convert each of the elements to its value(s)\n  }).map(function (i, elem) {\n    var $elem = Cheerio(elem);\n    var name = $elem.attr('name');\n    var val = $elem.val(); // If there is no value set (e.g. `undefined`, `null`), then return nothing\n\n    if (val == null) {\n      return null;\n    } else {\n      // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n      if (Array.isArray(val)) {\n        return _.map(val, function (val) {\n          // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n          //   These can occur inside of `<textarea>'s`\n          return {\n            name: name,\n            value: val.replace(rCRLF, '\\r\\n')\n          };\n        }); // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n      } else {\n        return {\n          name: name,\n          value: val.replace(rCRLF, '\\r\\n')\n        };\n      }\n    } // Convert our result to an array\n\n  }).get();\n};","map":null,"metadata":{},"sourceType":"script"}